---
- name: "Database | Create database"
  community.mysql.mysql_db:
    name: "{{ foodsoft_db }}"
    state: present
    collation: utf8mb4_unicode_520_ci
    encoding: utf8mb4
    login_unix_socket: "{{ mariadb_socket }}"
    login_user: root

- name: "Database | Add privileges to database user"
  community.mysql.mysql_user:
    name: "{{ foodsoft_db_user }}"
    priv: "{{ foodsoft_db }}.*:ALL"
    append_privs: true
    state: present
    login_unix_socket: "{{ mariadb_socket }}"
    login_user: root
    update_password: on_create

- name: "Database | copy database configuration"
  ansible.builtin.template:
    src: foodsoft/database.yml.j2
    dest: "{{ foodsoft_home }}/config/database.yml"
    owner: "{{ foodsoft_user }}"
    group: "{{ foodsoft_user }}"
    mode: "0600"

# If database schema is already loaded it outputs a version number > 0
- name: "Database | test if database schema is already loaded"
  ansible.builtin.shell:
    cmd: "rbenv exec bundle exec rails db:version | grep ^Current | sed 's/^.*: //'"
    chdir: "{{ foodsoft_home }}"
  environment:
    RAILS_ENV: production
    SECRET_KEY_BASE: "{{ foodsoft_secret_key_base }}"
  become: true
  become_user: "{{ foodsoft_user }}"
  register: db_version
  changed_when: false

- name: "Database | Create schema"
  ansible.builtin.command:
    cmd: "rbenv exec bundle exec rails db:schema:load"
    chdir: "{{ foodsoft_home }}"
  environment:
    RAILS_ENV: production
    SECRET_KEY_BASE: "{{ foodsoft_secret_key_base }}"
  become: true
  become_user: "{{ foodsoft_user }}"
  when: db_version.stdout == 0

- name: "Database | Run seed.rb"
  ansible.builtin.command:
    cmd: "rbenv exec bundle exec rails db:seed"
    chdir: "{{ foodsoft_home }}"
  environment:
    RAILS_ENV: production
    SECRET_KEY_BASE: "{{ foodsoft_secret_key_base }}"
  become: true
  become_user: "{{ foodsoft_user }}"
  when: db_version.stdout == 0 # db:seed is not idempotent in this case

- name: "Database | Run migrations"
  ansible.builtin.command:
    cmd: "rbenv exec bundle exec rails multicoops:run TASK=db:migrate"
    chdir: "{{ foodsoft_home }}"
  environment:
    RAILS_ENV: production
    SECRET_KEY_BASE: "{{ foodsoft_secret_key_base }}"
  become: true
  become_user: "{{ foodsoft_user }}"

- name: "Database | Compile assets"
  ansible.builtin.command:
    cmd: "rbenv exec bundle exec rails assets:precompile"
    chdir: "{{ foodsoft_home }}"
  environment:
    RAILS_ENV: production
    SECRET_KEY_BASE: "{{ foodsoft_secret_key_base }}"
  become: true
  become_user: "{{ foodsoft_user }}"
