---
- name: "Foodsoft | Configure git safe.directory"
  ansible.builtin.command:
    cmd: " git config --global --add safe.directory {{ foodsoft_home }}"

- name: "Foodsoft | get latest tag"
  ansible.builtin.shell:
    cmd: curl -sL "{{ foodsoft_git_latest_tag_url }}" | jq -r '.[0].name'
  register: latest_tag

- name: "Foodsoft | clone repository"
  ansible.builtin.git:
    repo: "{{ foodsoft_git_url }}"
    dest: "{{ foodsoft_home }}"
    version: "{{ foodsoft_version }}"
    force: true

- name: "Foodsoft | Ruby version lookup"
  ansible.builtin.command: cat "{{ foodsoft_home }}/.ruby-version"
  register: ruby_version
  changed_when: false

- name: "Foodsoft | Change owner of directory"
  ansible.builtin.file:
    path: "{{ foodsoft_home }}"
    state: directory
    recurse: true
    owner: "{{ foodsoft_user }}"
    group: "{{ foodsoft_user }}"

- name: "Foodsoft | Setup rbenv"
  ansible.builtin.lineinfile:
    path: "{{ foodsoft_user_home }}/.bashrc"
    line: eval "$(rbenv init -)"

- name: "Foodsoft | Create rbenv plugin directory"
  ansible.builtin.file:
    path: "{{ ruby_path }}/plugins"
    state: directory
    owner: "{{ foodsoft_user }}"
    group: "{{ foodsoft_user }}"
    mode: "0755"

- name: "Foodsoft | Install ruby-build"
  ansible.builtin.git:
    repo: "{{ ruby_build_git_url }}"
    dest: "{{ ruby_path }}/plugins/ruby-build"
    version: "{{ ruby_build_version }}"

- name: "Foodsoft | Install ruby"
  ansible.builtin.command:
    cmd: 'rbenv install {{ ruby_version.stdout }}'
    creates: "{{ ruby_path }}/versions/{{ ruby_version.stdout }}/bin/ruby"
  become: true
  become_user: "{{ foodsoft_user }}"

- name: "Foodsoft | Install bundler"
  ansible.builtin.command:
    cmd: rbenv exec gem install bundler
    chdir: "{{ foodsoft_home }}"
    creates: "{{ ruby_path }}/versions/{{ ruby_version.stdout }}/bin/bundler"
  become: true
  become_user: "{{ foodsoft_user }}"

# https://nokogiri.org/tutorials/installing_nokogiri.html#installing-using-standard-system-libraries
- name: "Foodsoft | Configure nokogiri"
  ansible.builtin.command:
    cmd: 'rbenv exec bundle config build.nokogiri "--use-system-libraries"'
    chdir: "{{ foodsoft_home }}"
  become: true
  become_user: "{{ foodsoft_user }}"
  environment:
    RAILS_ENV: production

- name: "Foodsoft | Set bundle options"
  ansible.builtin.command:
    cmd: "rbenv exec bundle config set --local without 'development test'"
    chdir: "{{ foodsoft_home }}"
    creates: "{{ foodsoft_home }}/.bundle/config"
  become: true
  become_user: "{{ foodsoft_user }}"

- name: "Foodsoft | Install ruby packages"
  ansible.builtin.command:
    cmd: "rbenv exec bundle install"
    chdir: "{{ foodsoft_home }}"
  become: true
  become_user: "{{ foodsoft_user }}"
  environment:
    RAILS_ENV: production

- name: "Foodsoft | Copy default configuration"
  ansible.builtin.copy:
    src: "{{ foodsoft_home }}/config/app_config.yml.SAMPLE"
    dest: "{{ foodsoft_home }}/config/app_config.yml"
    remote_src: true
    owner: "{{ foodsoft_user }}"
    group: "{{ foodsoft_user }}"
    mode: "0600"
    force: false

- name: "Foodsoft | Copy Active Storage configuration"
  ansible.builtin.copy:
    src: "{{ foodsoft_home }}/config/storage.yml.SAMPLE"
    dest: "{{ foodsoft_home }}/config/storage.yml"
    remote_src: true
    owner: "{{ foodsoft_user }}"
    group: "{{ foodsoft_user }}"
    mode: "0600"
    force: false

- name: "Foodsoft | Create Active Storage directory"
  ansible.builtin.file:
    path: "{{ foodsoft_home }}/storage"
    state: directory
    owner: "{{ foodsoft_user }}"
    group: "{{ foodsoft_user }}"
    mode: "0755"

- name: "Foodsoft | Add privileges to sharedlists suppliers"
  community.mysql.mysql_user:
    name: "{{ foodsoft_db_user }}"
    priv: "{{ sharedlists.database }}.suppliers:SELECT/sharedlists.articles:SELECT"
    append_privs: true
    state: present
    login_unix_socket: "{{ mariadb_socket }}"
    login_user: root
  when: sharedlists.enabled is defined and sharedlists.enabled

- name: "Foodsoft | Add logrotate configuration"
  ansible.builtin.template:
    src: logrotate.d/foodsoft.j2
    dest: /etc/logrotate.d/foodsoft
    mode: "0644"
