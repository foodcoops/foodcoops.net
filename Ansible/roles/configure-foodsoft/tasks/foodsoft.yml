---
- name: "Foodsoft | Check railties version"
  ansible.builtin.shell:
    cmd: rbenv exec bundle info railties | grep "railties (" | cut -d ' ' -f5 | sed 's/[)(]//g'
    chdir: "{{ foodsoft_home }}"
  become: true
  become_user: "{{ foodsoft_user }}"
  changed_when: false
  register: railties_version

# Copy only if version number matches.
- name: "Foodsoft | Copy monkey patch for anon logging"
  ansible.builtin.copy:
    src: foodsoft/anon_logger.rb
    dest: "{{ foodsoft_home }}/config/initializers/anon_logger.rb"
    owner: "{{ foodsoft_user }}"
    group: "{{ foodsoft_user }}"
    mode: "0644"
  when: railties_version.stdout <= "5.2.6"
  notify: restart foodsoft-web

# https://github.com/foodcoops/foodsoft/pull/923
- name: "Foodsoft | Allow stronger passwords"
  ansible.builtin.replace:
    path: "{{ foodsoft_home }}/app/models/user.rb"
    regexp: 'validates_length_of :password, :in => 5\.\.25'
    replace: 'validates_length_of :password, :in => 10..50'
  notify: restart foodsoft-web

- name: "Foodsoft | Update demo seeds"
  ansible.builtin.replace:
    path: "{{ foodsoft_home }}/db/seeds/small.en.seeds.rb"
    regexp: ':password => "secret"'
    replace: ':password => "secret1234"'

- name: "Foodsoft | Update minimal seeds"
  ansible.builtin.replace:
    path: "{{ foodsoft_home }}/db/seeds/minimal.seeds.rb"
    regexp: ':password => "secret"'
    replace: ':password => "secret1234"'

- name: "Foodsoft | Apply redirect after logout patch"
  ansible.posix.patch:
    src: foodsoft/redirect_after_logout.patch
    dest: "{{ foodsoft_home }}/app/controllers/sessions_controller.rb"
  notify: restart foodsoft-web

- name: "Foodsoft | Apply hide users patch"
  ansible.posix.patch:
    src: foodsoft/hide_users.patch
    dest: "{{ foodsoft_home }}/app/views/home/_start_nav.haml"
  notify: restart foodsoft-web

# https://github.com/foodcoops/foodsoft/issues/980
- name: Foodsoft | Remove haml gem from Gemfile
  ansible.builtin.lineinfile:
    path: "{{ foodsoft_home }}/Gemfile"
    line: gem 'haml'
    state: absent

- name: "Foodsoft | Enable local Gemfile support"
  ansible.builtin.blockinfile:
    path: "{{ foodsoft_home }}/Gemfile"
    marker: "# {mark} ANSIBLE MANAGED BLOCK | local Gemfile support"
    block: |
      local_gemfile = File.join(File.dirname(__FILE__), "Gemfile.local")
      if File.exist?(local_gemfile)
        eval_gemfile local_gemfile
      end

- name: "Foodsoft | Copy Gemfile.local"
  ansible.builtin.copy:
    src: foodsoft/Gemfile.local
    dest: "{{ foodsoft_home }}/Gemfile.local"
    owner: "{{ foodsoft_user }}"
    group: "{{ foodsoft_user }}"
    mode: "0644"
  register: gemfile

- name: "Foodsoft | Update Gemfile.lock"
  ansible.builtin.command:
    cmd: "rbenv exec bundle lock --update"
    chdir: "{{ foodsoft_home }}"
  become: true
  become_user: "{{ foodsoft_user }}"
  environment:
    RAILS_ENV: production
  when: gemfile.changed

- name: "Foodsoft | Install ruby packages"
  ansible.builtin.command:
    cmd: "rbenv exec bundle install"
    chdir: "{{ foodsoft_home }}"
  become: true
  become_user: "{{ foodsoft_user }}"
  environment:
    RAILS_ENV: production
  when: gemfile.changed
